<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.vitorgalvao.alfred.denteazul</string>
	<key>connections</key>
	<dict>
		<key>6DC6A16C-DD83-4EBC-B2E0-625FB1BCF1AD</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>92F90D27-0051-41F8-B6C1-7CED843FB32F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>F265BD48-6184-4CF9-BC09-B9E17F241B4E</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>92F90D27-0051-41F8-B6C1-7CED843FB32F</key>
		<array/>
		<key>F265BD48-6184-4CF9-BC09-B9E17F241B4E</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>658FE294-DEF2-49E3-BFF3-60B4C4BF1439</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>sourceoutputuid</key>
				<string>10CDCB96-3D1F-461C-8CB2-208B28BEC8D6</string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Toggle bluetooth and paired device connectivity</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Dente Azul</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>readonly address="${1}"

[[ "${connected}" == '1' ]] &amp;&amp; blueutil --disconnect "${address}" --wait-disconnect "${address}" || blueutil --connect "${address}" --wait-connect "${address}"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>11</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>92F90D27-0051-41F8-B6C1-7CED843FB32F</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<true/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>{var:device_toggle_keyword}</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Gathering devices info…</string>
				<key>script</key>
				<string>// Helpers
function envVar(varName) {
  return $.NSProcessInfo
    .processInfo
    .environment
    .objectForKey(varName).js
}

function runCommand(...arguments) {
  const task = $.NSTask.alloc.init
  const stdout = $.NSPipe.pipe

  task.executableURL = $.NSURL.fileURLWithPath("/usr/bin/env")
  task.arguments = arguments
  task.standardOutput = stdout
  task.launchAndReturnError(false)

  const dataOut = stdout.fileHandleForReading.readDataToEndOfFileAndReturnError(false)
  const stringOut = $.NSString.alloc.initWithDataEncoding(dataOut, $.NSUTF8StringEncoding).js

  return { stdout: stringOut, exitCode: task.terminationStatus }
}

function run() {
  // Check Bluetooth permission
  const hasPermission = runCommand(`${envVar("alfred_preferences")}/workflows/${envVar("alfred_workflow_uid")}/has-bluetooth-permission`).exitCode === 0

  if (!hasPermission) return JSON.stringify({ items: [{
    variables: { open_system_settings: true },
    title: "Unable to Access Bluetooth",
    subtitle: "Press ↩ to open System Settings, then grant Alfred Bluetooth permissions",
    icon: { path: "icon_alt.png" }
  }]})

  // Main
  const pairedDevices = JSON.parse(runCommand("blueutil", "--format", "json", "--paired").stdout)

  const sfItems = pairedDevices.map(device =&gt; {
    const state = device["connected"] ? "Connected" : "Not Connected"
    const iconPath = device["connected"] ? "icon.png" : "icon_alt.png"

    return {
      variables: { connected: device["connected"] },
      uid: device["address"],
      title: device["name"],
      subtitle: state,
      arg: device["address"],
      icon: { path: iconPath }
    }
  })

  return JSON.stringify({ rerun: 0.5, items: sfItems })
}</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>skipuniversalaction</key>
				<true/>
				<key>subtext</key>
				<string>Action to Toggle Connection Status</string>
				<key>title</key>
				<string>Show Paired Bluetooth Devices</string>
				<key>type</key>
				<integer>7</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>6DC6A16C-DD83-4EBC-B2E0-625FB1BCF1AD</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>browser</key>
				<string></string>
				<key>skipqueryencode</key>
				<false/>
				<key>skipvarencode</key>
				<false/>
				<key>spaces</key>
				<string></string>
				<key>url</key>
				<string>x-apple.systempreferences:com.apple.preference.security?Privacy_Bluetooth</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>658FE294-DEF2-49E3-BFF3-60B4C4BF1439</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>conditions</key>
				<array>
					<dict>
						<key>inputstring</key>
						<string>{var:open_system_settings}</string>
						<key>matchcasesensitive</key>
						<false/>
						<key>matchmode</key>
						<integer>5</integer>
						<key>matchstring</key>
						<string></string>
						<key>outputlabel</key>
						<string>Open System Settings</string>
						<key>uid</key>
						<string>10CDCB96-3D1F-461C-8CB2-208B28BEC8D6</string>
					</dict>
				</array>
				<key>elselabel</key>
				<string></string>
				<key>hideelse</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.conditional</string>
			<key>uid</key>
			<string>F265BD48-6184-4CF9-BC09-B9E17F241B4E</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>## Usage

Search your paired bluetooth devices via the `btd` keyword.

![Connect of disconnect devices](images/about/btd.png)

* &lt;kbd&gt;↩&lt;/kbd&gt; Toggle connected state.</string>
	<key>uidata</key>
	<dict>
		<key>658FE294-DEF2-49E3-BFF3-60B4C4BF1439</key>
		<dict>
			<key>xpos</key>
			<real>475</real>
			<key>ypos</key>
			<real>210</real>
		</dict>
		<key>6DC6A16C-DD83-4EBC-B2E0-625FB1BCF1AD</key>
		<dict>
			<key>xpos</key>
			<real>80</real>
			<key>ypos</key>
			<real>65</real>
		</dict>
		<key>92F90D27-0051-41F8-B6C1-7CED843FB32F</key>
		<dict>
			<key>xpos</key>
			<real>310</real>
			<key>ypos</key>
			<real>65</real>
		</dict>
		<key>F265BD48-6184-4CF9-BC09-B9E17F241B4E</key>
		<dict>
			<key>xpos</key>
			<real>350</real>
			<key>ypos</key>
			<real>240</real>
		</dict>
	</dict>
	<key>userconfigurationconfig</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>btd</string>
				<key>placeholder</key>
				<string></string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<true/>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>Device Toggle Keyword</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>device_toggle_keyword</string>
		</dict>
	</array>
	<key>version</key>
	<string>2024.1</string>
	<key>webaddress</key>
	<string>https://github.com/vitorgalvao/dente-azul-workflow/</string>
</dict>
</plist>
